// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `UserData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.user.zeroc;

public class UserJoinDTO implements java.lang.Cloneable,
                                    java.io.Serializable
{
    public java.util.List<com.maoding.common.zeroc.IdNameDTO> projectList;

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> getProjectList()
    {
        return projectList;
    }

    public void setProjectList(java.util.List<com.maoding.common.zeroc.IdNameDTO> projectList)
    {
        this.projectList = projectList;
    }

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> taskList;

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> getTaskList()
    {
        return taskList;
    }

    public void setTaskList(java.util.List<com.maoding.common.zeroc.IdNameDTO> taskList)
    {
        this.taskList = taskList;
    }

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> companyList;

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> getCompanyList()
    {
        return companyList;
    }

    public void setCompanyList(java.util.List<com.maoding.common.zeroc.IdNameDTO> companyList)
    {
        this.companyList = companyList;
    }

    public UserJoinDTO()
    {
    }

    public UserJoinDTO(java.util.List<com.maoding.common.zeroc.IdNameDTO> projectList, java.util.List<com.maoding.common.zeroc.IdNameDTO> taskList, java.util.List<com.maoding.common.zeroc.IdNameDTO> companyList)
    {
        this.projectList = projectList;
        this.taskList = taskList;
        this.companyList = companyList;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        UserJoinDTO r = null;
        if(rhs instanceof UserJoinDTO)
        {
            r = (UserJoinDTO)rhs;
        }

        if(r != null)
        {
            if(this.projectList != r.projectList)
            {
                if(this.projectList == null || r.projectList == null || !this.projectList.equals(r.projectList))
                {
                    return false;
                }
            }
            if(this.taskList != r.taskList)
            {
                if(this.taskList == null || r.taskList == null || !this.taskList.equals(r.taskList))
                {
                    return false;
                }
            }
            if(this.companyList != r.companyList)
            {
                if(this.companyList == null || r.companyList == null || !this.companyList.equals(r.companyList))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::UserJoinDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectList);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskList);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, companyList);
        return h_;
    }

    public UserJoinDTO clone()
    {
        UserJoinDTO c = null;
        try
        {
            c = (UserJoinDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        com.maoding.common.zeroc.IdNameListHelper.write(ostr, this.projectList);
        com.maoding.common.zeroc.IdNameListHelper.write(ostr, this.taskList);
        com.maoding.common.zeroc.IdNameListHelper.write(ostr, this.companyList);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.projectList = com.maoding.common.zeroc.IdNameListHelper.read(istr);
        this.taskList = com.maoding.common.zeroc.IdNameListHelper.read(istr);
        this.companyList = com.maoding.common.zeroc.IdNameListHelper.read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, UserJoinDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public UserJoinDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        UserJoinDTO v = new UserJoinDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<UserJoinDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, UserJoinDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<UserJoinDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(UserJoinDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final UserJoinDTO _nullMarshalValue = new UserJoinDTO();

    public static final long serialVersionUID = 862513308L;
}
