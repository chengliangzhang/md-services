// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `CommonData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.common.zeroc;

public class ConstQuery implements java.lang.Cloneable,
                                   java.io.Serializable
{
    public String classicId;

    public String getClassicId()
    {
        return classicId;
    }

    public void setClassicId(String classicId)
    {
        this.classicId = classicId;
    }

    public String classicName;

    public String getClassicName()
    {
        return classicName;
    }

    public void setClassicName(String classicName)
    {
        this.classicName = classicName;
    }

    public String codeId;

    public String getCodeId()
    {
        return codeId;
    }

    public void setCodeId(String codeId)
    {
        this.codeId = codeId;
    }

    public String title;

    public String getTitle()
    {
        return title;
    }

    public void setTitle(String title)
    {
        this.title = title;
    }

    public String fieldNum;

    public String getFieldNum()
    {
        return fieldNum;
    }

    public void setFieldNum(String fieldNum)
    {
        this.fieldNum = fieldNum;
    }

    public StringElementDTO convertData;

    public StringElementDTO getConvertData()
    {
        return convertData;
    }

    public void setConvertData(StringElementDTO convertData)
    {
        this.convertData = convertData;
    }

    public ConstQuery()
    {
        this.classicId = "";
        this.classicName = "";
        this.codeId = "";
        this.title = "";
        this.fieldNum = "";
        this.convertData = new StringElementDTO();
    }

    public ConstQuery(String classicId, String classicName, String codeId, String title, String fieldNum, StringElementDTO convertData)
    {
        this.classicId = classicId;
        this.classicName = classicName;
        this.codeId = codeId;
        this.title = title;
        this.fieldNum = fieldNum;
        this.convertData = convertData;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ConstQuery r = null;
        if(rhs instanceof ConstQuery)
        {
            r = (ConstQuery)rhs;
        }

        if(r != null)
        {
            if(this.classicId != r.classicId)
            {
                if(this.classicId == null || r.classicId == null || !this.classicId.equals(r.classicId))
                {
                    return false;
                }
            }
            if(this.classicName != r.classicName)
            {
                if(this.classicName == null || r.classicName == null || !this.classicName.equals(r.classicName))
                {
                    return false;
                }
            }
            if(this.codeId != r.codeId)
            {
                if(this.codeId == null || r.codeId == null || !this.codeId.equals(r.codeId))
                {
                    return false;
                }
            }
            if(this.title != r.title)
            {
                if(this.title == null || r.title == null || !this.title.equals(r.title))
                {
                    return false;
                }
            }
            if(this.fieldNum != r.fieldNum)
            {
                if(this.fieldNum == null || r.fieldNum == null || !this.fieldNum.equals(r.fieldNum))
                {
                    return false;
                }
            }
            if(this.convertData != r.convertData)
            {
                if(this.convertData == null || r.convertData == null || !this.convertData.equals(r.convertData))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::ConstQuery");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, classicId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, classicName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, codeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, title);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fieldNum);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, convertData);
        return h_;
    }

    public ConstQuery clone()
    {
        ConstQuery c = null;
        try
        {
            c = (ConstQuery)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.classicId);
        ostr.writeString(this.classicName);
        ostr.writeString(this.codeId);
        ostr.writeString(this.title);
        ostr.writeString(this.fieldNum);
        StringElementDTO.ice_write(ostr, this.convertData);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.classicId = istr.readString();
        this.classicName = istr.readString();
        this.codeId = istr.readString();
        this.title = istr.readString();
        this.fieldNum = istr.readString();
        this.convertData = StringElementDTO.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, ConstQuery v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public ConstQuery ice_read(com.zeroc.Ice.InputStream istr)
    {
        ConstQuery v = new ConstQuery();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<ConstQuery> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, ConstQuery v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<ConstQuery> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(ConstQuery.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final ConstQuery _nullMarshalValue = new ConstQuery();

    public static final long serialVersionUID = -951857060L;
}
