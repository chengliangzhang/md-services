// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `StorageData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.storage.zeroc;

public class HistoryDTO implements java.lang.Cloneable,
                                   java.io.Serializable
{
    public String id;

    public String getId()
    {
        return id;
    }

    public void setId(String id)
    {
        this.id = id;
    }

    public String userId;

    public String getUserId()
    {
        return userId;
    }

    public void setUserId(String userId)
    {
        this.userId = userId;
    }

    public String userName;

    public String getUserName()
    {
        return userName;
    }

    public void setUserName(String userName)
    {
        this.userName = userName;
    }

    public String roleId;

    public String getRoleId()
    {
        return roleId;
    }

    public void setRoleId(String roleId)
    {
        this.roleId = roleId;
    }

    public String roleName;

    public String getRoleName()
    {
        return roleName;
    }

    public void setRoleName(String roleName)
    {
        this.roleName = roleName;
    }

    public String actionTypeId;

    public String getActionTypeId()
    {
        return actionTypeId;
    }

    public void setActionTypeId(String actionTypeId)
    {
        this.actionTypeId = actionTypeId;
    }

    public String actionName;

    public String getActionName()
    {
        return actionName;
    }

    public void setActionName(String actionName)
    {
        this.actionName = actionName;
    }

    public long actionTimeStamp;

    public long getActionTimeStamp()
    {
        return actionTimeStamp;
    }

    public void setActionTimeStamp(long actionTimeStamp)
    {
        this.actionTimeStamp = actionTimeStamp;
    }

    public String actionTimeText;

    public String getActionTimeText()
    {
        return actionTimeText;
    }

    public void setActionTimeText(String actionTimeText)
    {
        this.actionTimeText = actionTimeText;
    }

    public String remark;

    public String getRemark()
    {
        return remark;
    }

    public void setRemark(String remark)
    {
        this.remark = remark;
    }

    /**
     **/
    @Deprecated
    public String fileId;

    /**
     **/
    @Deprecated
    public String getFileId()
    {
        return fileId;
    }

    /**
     **/
    @Deprecated
    public void setFileId(String fileId)
    {
        this.fileId = fileId;
    }

    public HistoryDTO()
    {
        this.id = "";
        this.userId = "";
        this.userName = "";
        this.roleId = "";
        this.roleName = "";
        this.actionTypeId = "";
        this.actionName = "";
        this.actionTimeText = "";
        this.remark = "";
        this.fileId = "";
    }

    public HistoryDTO(String id, String userId, String userName, String roleId, String roleName, String actionTypeId, String actionName, long actionTimeStamp, String actionTimeText, String remark, String fileId)
    {
        this.id = id;
        this.userId = userId;
        this.userName = userName;
        this.roleId = roleId;
        this.roleName = roleName;
        this.actionTypeId = actionTypeId;
        this.actionName = actionName;
        this.actionTimeStamp = actionTimeStamp;
        this.actionTimeText = actionTimeText;
        this.remark = remark;
        this.fileId = fileId;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        HistoryDTO r = null;
        if(rhs instanceof HistoryDTO)
        {
            r = (HistoryDTO)rhs;
        }

        if(r != null)
        {
            if(this.id != r.id)
            {
                if(this.id == null || r.id == null || !this.id.equals(r.id))
                {
                    return false;
                }
            }
            if(this.userId != r.userId)
            {
                if(this.userId == null || r.userId == null || !this.userId.equals(r.userId))
                {
                    return false;
                }
            }
            if(this.userName != r.userName)
            {
                if(this.userName == null || r.userName == null || !this.userName.equals(r.userName))
                {
                    return false;
                }
            }
            if(this.roleId != r.roleId)
            {
                if(this.roleId == null || r.roleId == null || !this.roleId.equals(r.roleId))
                {
                    return false;
                }
            }
            if(this.roleName != r.roleName)
            {
                if(this.roleName == null || r.roleName == null || !this.roleName.equals(r.roleName))
                {
                    return false;
                }
            }
            if(this.actionTypeId != r.actionTypeId)
            {
                if(this.actionTypeId == null || r.actionTypeId == null || !this.actionTypeId.equals(r.actionTypeId))
                {
                    return false;
                }
            }
            if(this.actionName != r.actionName)
            {
                if(this.actionName == null || r.actionName == null || !this.actionName.equals(r.actionName))
                {
                    return false;
                }
            }
            if(this.actionTimeStamp != r.actionTimeStamp)
            {
                return false;
            }
            if(this.actionTimeText != r.actionTimeText)
            {
                if(this.actionTimeText == null || r.actionTimeText == null || !this.actionTimeText.equals(r.actionTimeText))
                {
                    return false;
                }
            }
            if(this.remark != r.remark)
            {
                if(this.remark == null || r.remark == null || !this.remark.equals(r.remark))
                {
                    return false;
                }
            }
            if(this.fileId != r.fileId)
            {
                if(this.fileId == null || r.fileId == null || !this.fileId.equals(r.fileId))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::HistoryDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, roleId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, roleName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, actionTypeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, actionName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, actionTimeStamp);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, actionTimeText);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, remark);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileId);
        return h_;
    }

    public HistoryDTO clone()
    {
        HistoryDTO c = null;
        try
        {
            c = (HistoryDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.id);
        ostr.writeString(this.userId);
        ostr.writeString(this.userName);
        ostr.writeString(this.roleId);
        ostr.writeString(this.roleName);
        ostr.writeString(this.actionTypeId);
        ostr.writeString(this.actionName);
        ostr.writeLong(this.actionTimeStamp);
        ostr.writeString(this.actionTimeText);
        ostr.writeString(this.remark);
        ostr.writeString(this.fileId);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.id = istr.readString();
        this.userId = istr.readString();
        this.userName = istr.readString();
        this.roleId = istr.readString();
        this.roleName = istr.readString();
        this.actionTypeId = istr.readString();
        this.actionName = istr.readString();
        this.actionTimeStamp = istr.readLong();
        this.actionTimeText = istr.readString();
        this.remark = istr.readString();
        this.fileId = istr.readString();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, HistoryDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public HistoryDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        HistoryDTO v = new HistoryDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<HistoryDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, HistoryDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<HistoryDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(HistoryDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final HistoryDTO _nullMarshalValue = new HistoryDTO();

    public static final long serialVersionUID = -266257344L;
}
