// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `StorageData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.storage.zeroc;

public class SimpleNodeDTO implements java.lang.Cloneable,
                                      java.io.Serializable
{
    public String id;

    public String getId()
    {
        return id;
    }

    public void setId(String id)
    {
        this.id = id;
    }

    public String pid;

    public String getPid()
    {
        return pid;
    }

    public void setPid(String pid)
    {
        this.pid = pid;
    }

    public String typeId;

    public String getTypeId()
    {
        return typeId;
    }

    public void setTypeId(String typeId)
    {
        this.typeId = typeId;
    }

    public String name;

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public long createTimeStamp;

    public long getCreateTimeStamp()
    {
        return createTimeStamp;
    }

    public void setCreateTimeStamp(long createTimeStamp)
    {
        this.createTimeStamp = createTimeStamp;
    }

    public long lastModifyTimeStamp;

    public long getLastModifyTimeStamp()
    {
        return lastModifyTimeStamp;
    }

    public void setLastModifyTimeStamp(long lastModifyTimeStamp)
    {
        this.lastModifyTimeStamp = lastModifyTimeStamp;
    }

    public boolean isDirectory;

    public boolean getIsDirectory()
    {
        return isDirectory;
    }

    public void setIsDirectory(boolean isDirectory)
    {
        this.isDirectory = isDirectory;
    }

    public boolean isIsDirectory()
    {
        return isDirectory;
    }

    public String projectId;

    public String getProjectId()
    {
        return projectId;
    }

    public void setProjectId(String projectId)
    {
        this.projectId = projectId;
    }

    public String taskId;

    public String getTaskId()
    {
        return taskId;
    }

    public void setTaskId(String taskId)
    {
        this.taskId = taskId;
    }

    public String ownerUserId;

    public String getOwnerUserId()
    {
        return ownerUserId;
    }

    public void setOwnerUserId(String ownerUserId)
    {
        this.ownerUserId = ownerUserId;
    }

    public String path;

    public String getPath()
    {
        return path;
    }

    public void setPath(String path)
    {
        this.path = path;
    }

    public String fileMd5;

    public String getFileMd5()
    {
        return fileMd5;
    }

    public void setFileMd5(String fileMd5)
    {
        this.fileMd5 = fileMd5;
    }

    public long fileLength;

    public long getFileLength()
    {
        return fileLength;
    }

    public void setFileLength(long fileLength)
    {
        this.fileLength = fileLength;
    }

    public String ownerName;

    public String getOwnerName()
    {
        return ownerName;
    }

    public void setOwnerName(String ownerName)
    {
        this.ownerName = ownerName;
    }

    public String projectName;

    public String getProjectName()
    {
        return projectName;
    }

    public void setProjectName(String projectName)
    {
        this.projectName = projectName;
    }

    public String taskName;

    public String getTaskName()
    {
        return taskName;
    }

    public void setTaskName(String taskName)
    {
        this.taskName = taskName;
    }

    public boolean isTaskRole;

    public boolean getIsTaskRole()
    {
        return isTaskRole;
    }

    public void setIsTaskRole(boolean isTaskRole)
    {
        this.isTaskRole = isTaskRole;
    }

    public boolean isIsTaskRole()
    {
        return isTaskRole;
    }

    public boolean isTaskDesigner;

    public boolean getIsTaskDesigner()
    {
        return isTaskDesigner;
    }

    public void setIsTaskDesigner(boolean isTaskDesigner)
    {
        this.isTaskDesigner = isTaskDesigner;
    }

    public boolean isIsTaskDesigner()
    {
        return isTaskDesigner;
    }

    public boolean isTaskChecker;

    public boolean getIsTaskChecker()
    {
        return isTaskChecker;
    }

    public void setIsTaskChecker(boolean isTaskChecker)
    {
        this.isTaskChecker = isTaskChecker;
    }

    public boolean isIsTaskChecker()
    {
        return isTaskChecker;
    }

    public boolean isTaskAuditor;

    public boolean getIsTaskAuditor()
    {
        return isTaskAuditor;
    }

    public void setIsTaskAuditor(boolean isTaskAuditor)
    {
        this.isTaskAuditor = isTaskAuditor;
    }

    public boolean isIsTaskAuditor()
    {
        return isTaskAuditor;
    }

    public boolean isReadOnly;

    public boolean getIsReadOnly()
    {
        return isReadOnly;
    }

    public void setIsReadOnly(boolean isReadOnly)
    {
        this.isReadOnly = isReadOnly;
    }

    public boolean isIsReadOnly()
    {
        return isReadOnly;
    }

    public boolean canCreateChild;

    public boolean getCanCreateChild()
    {
        return canCreateChild;
    }

    public void setCanCreateChild(boolean canCreateChild)
    {
        this.canCreateChild = canCreateChild;
    }

    public boolean isCanCreateChild()
    {
        return canCreateChild;
    }

    public SimpleNodeDTO()
    {
        this.id = "";
        this.pid = "";
        this.typeId = "";
        this.name = "";
        this.projectId = "";
        this.taskId = "";
        this.ownerUserId = "";
        this.path = "";
        this.fileMd5 = "";
        this.ownerName = "";
        this.projectName = "";
        this.taskName = "";
    }

    public SimpleNodeDTO(String id, String pid, String typeId, String name, long createTimeStamp, long lastModifyTimeStamp, boolean isDirectory, String projectId, String taskId, String ownerUserId, String path, String fileMd5, long fileLength, String ownerName, String projectName, String taskName, boolean isTaskRole, boolean isTaskDesigner, boolean isTaskChecker, boolean isTaskAuditor, boolean isReadOnly, boolean canCreateChild)
    {
        this.id = id;
        this.pid = pid;
        this.typeId = typeId;
        this.name = name;
        this.createTimeStamp = createTimeStamp;
        this.lastModifyTimeStamp = lastModifyTimeStamp;
        this.isDirectory = isDirectory;
        this.projectId = projectId;
        this.taskId = taskId;
        this.ownerUserId = ownerUserId;
        this.path = path;
        this.fileMd5 = fileMd5;
        this.fileLength = fileLength;
        this.ownerName = ownerName;
        this.projectName = projectName;
        this.taskName = taskName;
        this.isTaskRole = isTaskRole;
        this.isTaskDesigner = isTaskDesigner;
        this.isTaskChecker = isTaskChecker;
        this.isTaskAuditor = isTaskAuditor;
        this.isReadOnly = isReadOnly;
        this.canCreateChild = canCreateChild;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        SimpleNodeDTO r = null;
        if(rhs instanceof SimpleNodeDTO)
        {
            r = (SimpleNodeDTO)rhs;
        }

        if(r != null)
        {
            if(this.id != r.id)
            {
                if(this.id == null || r.id == null || !this.id.equals(r.id))
                {
                    return false;
                }
            }
            if(this.pid != r.pid)
            {
                if(this.pid == null || r.pid == null || !this.pid.equals(r.pid))
                {
                    return false;
                }
            }
            if(this.typeId != r.typeId)
            {
                if(this.typeId == null || r.typeId == null || !this.typeId.equals(r.typeId))
                {
                    return false;
                }
            }
            if(this.name != r.name)
            {
                if(this.name == null || r.name == null || !this.name.equals(r.name))
                {
                    return false;
                }
            }
            if(this.createTimeStamp != r.createTimeStamp)
            {
                return false;
            }
            if(this.lastModifyTimeStamp != r.lastModifyTimeStamp)
            {
                return false;
            }
            if(this.isDirectory != r.isDirectory)
            {
                return false;
            }
            if(this.projectId != r.projectId)
            {
                if(this.projectId == null || r.projectId == null || !this.projectId.equals(r.projectId))
                {
                    return false;
                }
            }
            if(this.taskId != r.taskId)
            {
                if(this.taskId == null || r.taskId == null || !this.taskId.equals(r.taskId))
                {
                    return false;
                }
            }
            if(this.ownerUserId != r.ownerUserId)
            {
                if(this.ownerUserId == null || r.ownerUserId == null || !this.ownerUserId.equals(r.ownerUserId))
                {
                    return false;
                }
            }
            if(this.path != r.path)
            {
                if(this.path == null || r.path == null || !this.path.equals(r.path))
                {
                    return false;
                }
            }
            if(this.fileMd5 != r.fileMd5)
            {
                if(this.fileMd5 == null || r.fileMd5 == null || !this.fileMd5.equals(r.fileMd5))
                {
                    return false;
                }
            }
            if(this.fileLength != r.fileLength)
            {
                return false;
            }
            if(this.ownerName != r.ownerName)
            {
                if(this.ownerName == null || r.ownerName == null || !this.ownerName.equals(r.ownerName))
                {
                    return false;
                }
            }
            if(this.projectName != r.projectName)
            {
                if(this.projectName == null || r.projectName == null || !this.projectName.equals(r.projectName))
                {
                    return false;
                }
            }
            if(this.taskName != r.taskName)
            {
                if(this.taskName == null || r.taskName == null || !this.taskName.equals(r.taskName))
                {
                    return false;
                }
            }
            if(this.isTaskRole != r.isTaskRole)
            {
                return false;
            }
            if(this.isTaskDesigner != r.isTaskDesigner)
            {
                return false;
            }
            if(this.isTaskChecker != r.isTaskChecker)
            {
                return false;
            }
            if(this.isTaskAuditor != r.isTaskAuditor)
            {
                return false;
            }
            if(this.isReadOnly != r.isReadOnly)
            {
                return false;
            }
            if(this.canCreateChild != r.canCreateChild)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::SimpleNodeDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, pid);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, typeId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, name);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, createTimeStamp);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, lastModifyTimeStamp);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isDirectory);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, ownerUserId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, path);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileMd5);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, fileLength);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, ownerName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isTaskRole);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isTaskDesigner);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isTaskChecker);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isTaskAuditor);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isReadOnly);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, canCreateChild);
        return h_;
    }

    public SimpleNodeDTO clone()
    {
        SimpleNodeDTO c = null;
        try
        {
            c = (SimpleNodeDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.id);
        ostr.writeString(this.pid);
        ostr.writeString(this.typeId);
        ostr.writeString(this.name);
        ostr.writeLong(this.createTimeStamp);
        ostr.writeLong(this.lastModifyTimeStamp);
        ostr.writeBool(this.isDirectory);
        ostr.writeString(this.projectId);
        ostr.writeString(this.taskId);
        ostr.writeString(this.ownerUserId);
        ostr.writeString(this.path);
        ostr.writeString(this.fileMd5);
        ostr.writeLong(this.fileLength);
        ostr.writeString(this.ownerName);
        ostr.writeString(this.projectName);
        ostr.writeString(this.taskName);
        ostr.writeBool(this.isTaskRole);
        ostr.writeBool(this.isTaskDesigner);
        ostr.writeBool(this.isTaskChecker);
        ostr.writeBool(this.isTaskAuditor);
        ostr.writeBool(this.isReadOnly);
        ostr.writeBool(this.canCreateChild);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.id = istr.readString();
        this.pid = istr.readString();
        this.typeId = istr.readString();
        this.name = istr.readString();
        this.createTimeStamp = istr.readLong();
        this.lastModifyTimeStamp = istr.readLong();
        this.isDirectory = istr.readBool();
        this.projectId = istr.readString();
        this.taskId = istr.readString();
        this.ownerUserId = istr.readString();
        this.path = istr.readString();
        this.fileMd5 = istr.readString();
        this.fileLength = istr.readLong();
        this.ownerName = istr.readString();
        this.projectName = istr.readString();
        this.taskName = istr.readString();
        this.isTaskRole = istr.readBool();
        this.isTaskDesigner = istr.readBool();
        this.isTaskChecker = istr.readBool();
        this.isTaskAuditor = istr.readBool();
        this.isReadOnly = istr.readBool();
        this.canCreateChild = istr.readBool();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, SimpleNodeDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public SimpleNodeDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        SimpleNodeDTO v = new SimpleNodeDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<SimpleNodeDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, SimpleNodeDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<SimpleNodeDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(SimpleNodeDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final SimpleNodeDTO _nullMarshalValue = new SimpleNodeDTO();

    public static final long serialVersionUID = -1600068884L;
}
