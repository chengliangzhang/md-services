// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `UserData.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.maoding.user.zeroc;

public class ProjectRoleDTO implements java.lang.Cloneable,
                                       java.io.Serializable
{
    public String userId;

    public String getUserId()
    {
        return userId;
    }

    public void setUserId(String userId)
    {
        this.userId = userId;
    }

    public String userName;

    public String getUserName()
    {
        return userName;
    }

    public void setUserName(String userName)
    {
        this.userName = userName;
    }

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> projectRoleList;

    public java.util.List<com.maoding.common.zeroc.IdNameDTO> getProjectRoleList()
    {
        return projectRoleList;
    }

    public void setProjectRoleList(java.util.List<com.maoding.common.zeroc.IdNameDTO> projectRoleList)
    {
        this.projectRoleList = projectRoleList;
    }

    public java.util.List<TaskRoleDTO> taskList;

    public java.util.List<TaskRoleDTO> getTaskList()
    {
        return taskList;
    }

    public void setTaskList(java.util.List<TaskRoleDTO> taskList)
    {
        this.taskList = taskList;
    }

    public ProjectRoleDTO()
    {
        this.userId = "";
        this.userName = "";
    }

    public ProjectRoleDTO(String userId, String userName, java.util.List<com.maoding.common.zeroc.IdNameDTO> projectRoleList, java.util.List<TaskRoleDTO> taskList)
    {
        this.userId = userId;
        this.userName = userName;
        this.projectRoleList = projectRoleList;
        this.taskList = taskList;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ProjectRoleDTO r = null;
        if(rhs instanceof ProjectRoleDTO)
        {
            r = (ProjectRoleDTO)rhs;
        }

        if(r != null)
        {
            if(this.userId != r.userId)
            {
                if(this.userId == null || r.userId == null || !this.userId.equals(r.userId))
                {
                    return false;
                }
            }
            if(this.userName != r.userName)
            {
                if(this.userName == null || r.userName == null || !this.userName.equals(r.userName))
                {
                    return false;
                }
            }
            if(this.projectRoleList != r.projectRoleList)
            {
                if(this.projectRoleList == null || r.projectRoleList == null || !this.projectRoleList.equals(r.projectRoleList))
                {
                    return false;
                }
            }
            if(this.taskList != r.taskList)
            {
                if(this.taskList == null || r.taskList == null || !this.taskList.equals(r.taskList))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::zeroc::ProjectRoleDTO");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, userName);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, projectRoleList);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, taskList);
        return h_;
    }

    public ProjectRoleDTO clone()
    {
        ProjectRoleDTO c = null;
        try
        {
            c = (ProjectRoleDTO)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.userId);
        ostr.writeString(this.userName);
        com.maoding.common.zeroc.IdNameListHelper.write(ostr, this.projectRoleList);
        TaskRoleListHelper.write(ostr, this.taskList);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.userId = istr.readString();
        this.userName = istr.readString();
        this.projectRoleList = com.maoding.common.zeroc.IdNameListHelper.read(istr);
        this.taskList = TaskRoleListHelper.read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, ProjectRoleDTO v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public ProjectRoleDTO ice_read(com.zeroc.Ice.InputStream istr)
    {
        ProjectRoleDTO v = new ProjectRoleDTO();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<ProjectRoleDTO> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, ProjectRoleDTO v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<ProjectRoleDTO> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(ProjectRoleDTO.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final ProjectRoleDTO _nullMarshalValue = new ProjectRoleDTO();

    public static final long serialVersionUID = -678103790L;
}
